{'TMP': 'C:\\Users\\ADMINI~1\\AppData\\Local\\Temp', 'COMPUTERNAME': 'GOLST', 'VS140COMNTOOLS': 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\', 'VS110COMNTOOLS': 'C:\\Program Files (x86)\\Microsoft Visual Studio 11.0\\Common7\\Tools\\', 'USERDOMAIN': 'GOLST', 'VISUALSTUDIODIR': 'd:\\Documents\\Visual Studio 2015', 'PSMODULEPATH': 'C:\\Program Files\\WindowsPowerShell\\Modules;C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules', 'COMMONPROGRAMFILES': 'C:\\Program Files (x86)\\Common Files', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 55 Stepping 8, GenuineIntel', 'NUMBER_OF_PROCESSORS': '4', 'PROGRAMFILES': 'C:\\Program Files (x86)', 'PROCESSOR_REVISION': '3708', 'PATH': 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\IDE\\CommonExtensions\\Microsoft\\TeamFoundation\\Team Explorer\\NativeBinaries\\x86;C:\\ProgramData\\Oracle\\Java\\javapath;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files (x86)\\Windows Kits\\10\\Windows Performance Toolkit\\;C:\\Program Files (x86)\\Java\\jdk1.8.0_102\\bin;C:\\Program Files (x86)\\Java\\jre1.8.0_102\\bin;C:\\Users\\Administrator\\AppData\\Roaming\\npm;C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319;C:\\Windows\\SysWOW64\\WindowsPowerShell\\v1.0\\Modules\\TShell\\TShell\\;F:\\nodejs\\;C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\bin;C:\\Program Files\\Microsoft SQL Server\\120\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v10.0A\\bin\\NETFX 4.6 Tools;F:\\Strawberry\\c\\bin;F:\\Strawberry\\perl\\site\\bin;F:\\Strawberry\\perl\\bin;C:\\Program Files\\dotnet\\;C:\\Program Files (x86)\\Microsoft SQL Server\\110\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\120\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\130\\DTS\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\100\\Tools\\Binn\\VSShell\\Common7\\IDE\\;C:\\Program Files (x86)\\Microsoft SQL Server\\100\\Tools\\Binn\\;C:\\Program Files\\Microsoft SQL Server\\100\\Tools\\Binn\\;C:\\Program Files (x86)\\Microsoft SQL Server\\100\\DTS\\Binn\\;D:\\Git\\cmd;C:\\Users\\Administrator\\.dnx\\bin;C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts\\;C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python36-32\\;F:\\Nmap;C:\\Users\\Administrator\\AppData\\Local\\Microsoft\\WindowsApps', 'SYSTEMROOT': 'C:\\WINDOWS', 'CLASSPATH': '.;C:\\Program Files (x86)\\Java\\jdk1.8.0_102\\lib\\sound.jar;C:\\Program Files (x86)\\Java\\jdk1.8.0_102\\lib\\jmf.jar;C:\\Program Files (x86)\\Java\\jdk1.8.0_102\\lib;.;.;C:\\PROGRA~2\\JMF21~1.1E\\lib\\sound.jar;C:\\PROGRA~2\\JMF21~1.1E\\lib\\jmf.jar;C:\\PROGRA~2\\JMF21~1.1E\\lib;', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'DNX_HOME': 'C:\\Users\\Administrator\\.dnx', 'VSSDK140INSTALL': 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VSSDK\\', 'KMP_DUPLICATE_LIB_OK': 'TRUE', 'PKGDEFAPPLICATIONCONFIGFILE': 'C:\\Users\\Administrator\\AppData\\Local\\Microsoft\\VisualStudio\\14.0\\devenv.exe.config', 'TEMP': 'C:\\Users\\ADMINI~1\\AppData\\Local\\Temp', 'JAVE_HOME': 'C:\\Program Files (x86)\\Java\\jre1.8.0_101', 'MKL_SERIAL': 'YES', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'MSBUILDLOADMICROSOFTTARGETSREADONLY': 'true', 'PROCESSOR_ARCHITECTURE': 'x86', 'ALLUSERSPROFILE': 'C:\\ProgramData', 'LOCALAPPDATA': 'C:\\Users\\Administrator\\AppData\\Local', 'FPS_BROWSER_USER_PROFILE_STRING': 'Default', 'HOMEPATH': '\\Users\\Administrator', 'VISUALSTUDIOVERSION': '14.0', 'VS120COMNTOOLS': 'C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\Common7\\Tools\\', 'PROGRAMW6432': 'C:\\Program Files', 'USERNAME': 'Administrator', 'LOGONSERVER': '\\\\GOLST', 'PROMPT': '$P$G', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'PROGRAMDATA': 'C:\\ProgramData', 'PYTHONPATH': '', 'ONEDRIVE': 'C:\\Users\\Administrator\\OneDrive', 'FPS_BROWSER_APP_PROFILE_STRING': 'Internet Explorer', '_PTVS_PID': '2356', 'VISUALSTUDIOEDITION': 'Microsoft Visual Studio Community 2015', 'USERDOMAIN_ROAMINGPROFILE': 'GOLST', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'WINDIR': 'C:\\WINDOWS', 'APPDATA': 'C:\\Users\\Administrator\\AppData\\Roaming', 'HOMEDRIVE': 'C:', 'OS': 'Windows_NT', 'SYSTEMDRIVE': 'C:', 'VSLANG': '2052', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_ARCHITEW6432': 'AMD64', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', '__COMPAT_LAYER': 'Installer', 'PUBLIC': 'C:\\Users\\Public', 'USERPROFILE': 'C:\\Users\\Administrator'}